apiVersion: apps/v1
kind: Deployment
metadata:
  name: user-service-consumer
spec:
  minReadySeconds: 3
  revisionHistoryLimit: 5
  progressDeadlineSeconds: 60
  strategy:
    rollingUpdate:
      maxUnavailable: 0
    type: RollingUpdate
  selector:
    matchLabels:
      app: user-service-consumer
  template:
    metadata:
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "9797"
      labels:
        app: user-service-consumer
    spec:
      containers:
        - name: user-service-consumer
          image: ghcr.io/danielmunro/otto-user-service-consumer:v0.1.32
          imagePullPolicy: Always
          ports:
            - containerPort: 8080
              name: http
              protocol: TCP
          resources:
            limits:
              cpu: 250m
              memory: 256Mi
            requests:
              cpu: 100m
              memory: 64Mi
          env:
            - name: POSTGRES_HOST
              valueFrom:
                secretKeyRef:
                  name: postgres-user
                  key: host
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: postgres-user
                  key: user
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: postgres-user
                  key: password
            - name: POSTGRES_PORT
              valueFrom:
                secretKeyRef:
                  name: postgres-user
                  key: port
            - name: POSTGRES_DBNAME
              valueFrom:
                secretKeyRef:
                  name: postgres-user
                  key: database
            - name: COGNITO_CLIENT_ID
              valueFrom:
                secretKeyRef:
                  name: cognito
                  key: client_id
            - name: COGNITO_CLIENT_SECRET
              valueFrom:
                secretKeyRef:
                  name: cognito
                  key: client_secret
            - name: USER_POOL_ID
              valueFrom:
                secretKeyRef:
                  name: cognito
                  key: user_pool_id
            - name: AWS_REGION
              valueFrom:
                secretKeyRef:
                  name: cognito
                  key: aws_region
            - name: AWS_ACCESS_KEY_ID
              valueFrom:
                secretKeyRef:
                  name: aws
                  key: client_id
            - name: AWS_SECRET_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  name: aws
                  key: client_secret
            - name: KAFKA_BOOTSTRAP_SERVERS
              valueFrom:
                secretKeyRef:
                  name: kafka
                  key: bootstrap_servers
            - name: KAFKA_SECURITY_PROTOCOL
              valueFrom:
                secretKeyRef:
                  name: kafka
                  key: security_protocol
            - name: KAFKA_SASL_MECHANISM
              valueFrom:
                secretKeyRef:
                  name: kafka
                  key: sasl_mechanism
            - name: KAFKA_SASL_USERNAME
              valueFrom:
                secretKeyRef:
                  name: kafka
                  key: sasl_username
            - name: KAFKA_SASL_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: kafka
                  key: sasl_password
      imagePullSecrets:
        - name: dockerconfigjson-github-com
        - name: postgres-user
        - name: cognito
        - name: aws
        - name: kafka
